# EXPECT: typefail

# ## We're going to build a union between `A int and `B int
# First, build each side
x1 = 0;
x2 = `A x1;
x3 = 1;
x4 = `B x3;
# Next, get a type-ambiguous boolean
x5 = == x1 x3;
# Create a conditional to union the two labels
x6 = p2 \
     { p1 = ();
       p2 = `True p1;
     } ->
     { x7 = x2;
     };
x8 = p4 \
     { p3 = ();
       p4 = `False p3;
     } ->
     { x9 = x4;
     };
x10 = x6 & x8;
x11 = x10 x5;
# Now attempt to match on the conjunction
x12 = p9 \
      { p5 = ();
	p6 = `A p5;
	p7 = ();
	p8 = `B p7;
	p9 = p6 * p8;
      } ->
      { x13 = 0;
      };
x14 = x12 x11;
