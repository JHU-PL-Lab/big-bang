package edu.jhu.cs.bigbang.communicator.util;

import java.util.List;
import java.util.ArrayList;

import edu.jhu.cs.bigbang.communicator.exception.TinyBangInternalErrorException;
import edu.jhu.cs.bigbang.communicator.exception.TinyBangProtocolException;
import edu.jhu.cs.bigbang.communicator.fromHS.FromHaskellObject;
import edu.jhu.cs.bigbang.communicator.toHS.*;

public class TinyBangRuntime {

	private List<String> cmdLst = new ArrayList<String>();
	private ProcessBuilder pb = null;

	public TinyBangRuntime() {
		cmdLst.add("/home/chao/work/big_bang/big-bang/tiny-bang/dist/build/tiny-bang/tiny-bang");
		cmdLst.add("--batch-mode");
		pb = new ProcessBuilder(cmdLst);
	}

	public FromHaskellObject runSubProcess() throws TinyBangProtocolException,
			TinyBangInternalErrorException {
		
		TinyBangProcess tbp = new TinyBangProcess(pb);		
		String usrInpStr = "x1=1;x2=2;x3=x1+x2";
		String evalErr = "x1=1;x2=x2+x3";
		String parserErr = "x1";
		ToHaskellObject tho = new RunCodeCommand(1, evalErr);		
		// print out object for debug		
		RunCodeCommand rcc = (RunCodeCommand)tho;			
		System.out.println("RunCodeCommand generated by java: " + " cmdId " + rcc.getCmdId() + ", usrInpStr " + rcc.getUsrInpStr());
		
		// send java obj to tinybang interpreter
		tbp.sendObj(rcc);
		
		// get response from tinybang interpreter
		// FromHaskellObject fho = tbp.readObject(FromHaskellObject.class);
		FromHaskellObject fho = tbp.readObject();	
		printf("get object " + fho.getClass());
		// destroy the subprocess
		tbp.destroySubProcess();
		
		//return fho.toString();
		return fho;
	}

	public void printf(Object object) {
 		System.out.println(object);
 	}
	
}
